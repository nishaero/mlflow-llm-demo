name: Build, Test, Lint, Scan, and Push Docker Image to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  build-test-lint-push:
    runs-on: ubuntu-latest
    environment: dev
    permissions:
      packages: write
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint code (flake8)
        run: |
          pip install flake8
          flake8 app/ --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app/ --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run tests (pytest)
        run: |
          pip install pytest
          pytest tests/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Get latest version tag
        id: get_tag
        run: |
          git fetch --tags
          TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:${{ steps.get_tag.outputs.tag }} .

      - name: Scan Docker image for vulnerabilities (Trivy)
        uses: aquasecurity/trivy-action@v0.32.0
        with:
          image-ref: ${{ env.IMAGE_NAME }}:latest
          format: 'table'

      - name: Push Docker image
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ steps.get_tag.outputs.tag }}
